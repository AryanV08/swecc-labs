name: Invite Contributors to Team

on:
  push:
    branches:
      - main
    paths:
      - 'data/contributors.json'

jobs:
  invite-to-team:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Create invite script
        run: |
          cat > invite-script.js << 'EOF'
          import { Octokit } from '@octokit/rest';
          import fs from 'fs';

          // Initialize Octokit with the admin token
          const octokit = new Octokit({
            auth: process.env.GITHUB_TOKEN,
          });

          // Organization and team details
          const org = 'swecc-uw';
          const teamSlug = 'contributors';

          async function run() {
            try {
              // Read contributors from the JSON file
              const contributorsData = fs.readFileSync('./data/contributors.json', 'utf8');
              const contributors = JSON.parse(contributorsData);

              console.log(`Found ${contributors.length} contributors in the JSON file`);

              // Get current team members
              const currentMembers = await getAllTeamMembers(org, teamSlug);
              const currentMemberLogins = currentMembers.map(member => member.login.toLowerCase());

              console.log(`Current team has ${currentMembers.length} members`);

              // Invite contributors who are not already team members
              let inviteCount = 0;

              for (const contributor of contributors) {
                const githubUsername = contributor.github;
                
                if (!githubUsername) {
                  console.log(`Skipping contributor ${contributor.name} - no GitHub username specified`);
                  continue;
                }
                
                // Check if already a member (case-insensitive comparison)
                if (currentMemberLogins.includes(githubUsername.toLowerCase())) {
                  console.log(`${githubUsername} is already a member of the team, skipping`);
                  continue;
                }
                
                try {
                  // Send the invitation
                  await octokit.teams.addOrUpdateMembershipForUserInOrg({
                    org,
                    team_slug: teamSlug,
                    username: githubUsername,
                    role: 'member'
                  });

                  console.log(`✅ Invited ${githubUsername} (${contributor.name}) to team`);
                  inviteCount++;
                } catch (error) {
                  console.error(`❌ Failed to invite ${githubUsername}: ${error.message}`);
                }
              }

              console.log(`Successfully invited ${inviteCount} new contributors to the team`);
            } catch (error) {
              console.error(`Action failed: ${error.message}`);
              process.exit(1);
            }
          }

          // Helper function to get all team members (handles pagination)
          async function getAllTeamMembers(org, teamSlug) {
            try {
              const members = [];
              let page = 1;
              let hasMorePages = true;

              while (hasMorePages) {
                const response = await octokit.teams.listMembersInOrg({
                  org,
                  team_slug: teamSlug,
                  per_page: 100,
                  page
                });

                members.push(...response.data);

                if (response.data.length < 100) {
                  hasMorePages = false;
                } else {
                  page++;
                }
              }

              return members;
            } catch (error) {
              console.error(`Failed to fetch team members: ${error.message}`);
              return [];
            }
          }

          // Execute the main function
          run();
          EOF

      - name: Install dependencies
        run: npm install @octokit/rest

      - name: Create package.json
        run: |
          echo '{
            "name": "team-inviter",
            "version": "1.0.0",
            "type": "module"
          }' > package.json

      - name: Run invitation script
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
        run: node invite-script.js